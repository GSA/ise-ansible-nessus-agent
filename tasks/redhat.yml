---
- name: checking for existing installed nessus agent
  stat:
    path: '{{ redhat_nessus_agent_path }}'
  register: agent

- debug:
    msg: "nessus agent not found"
  when: not agent.stat.exists

- debug:
    msg: "nessus agent found (skip installing)"
  when: agent.stat.exists

- name: download nessus agent
  shell: |
    echo "download nessus agent installation artifacts from s3"
  amazon.aws.aws_s3:
    bucket: sectools-artifacts
    object: /nessus-agent/NessusAgent-8.0.0-amzn.x86_64.rpm
    dest: /tmp/NessusAgent-8.0.0-amzn.x86_64.rpm
    mode: get
  when: not agent.stat.exists


# - name: install nessus agent (redhat)
#   shell: |
#     echo "install nessus agent"
#   yum:
#     name: '{{ redhat_nessus_agent_url }}'
#     state: present
#     validate_certs: no
#     disable_plugin: "yum-rhn-plugin"
#     disablerepo: "*"
#   when: not agent.stat.exists
#   register: install_nessus_agent

# - debug:
#   msg: "{{ install_nessus_agent.stdout }}"

# - name: check agent link status
#   command: '{{ redhat_nessus_agent_path }} agent status'
#   become: yes
#   register: nessus_link
#   ignore_errors: yes # adding ignore_errors since this will fail until you have an environment with connectivity to a nessus master host
#   when: not agent.stat.exists or agent.stat.exists
#   changed_when: '"[info] [agent] Linked to" not in nessus_link.stdout'

# - debug:
#     msg: "nessus agent still linked"
#   when: '"[info] [agent] Linked to" in nessus_link.stdout'

# - name: register nessus agent
#   shell:
#     "{{ redhat_nessus_agent_path }}
#     agent link --key={{ agent_secrets.nessus_agent_key }}
#     --host={{ agent_secrets.nessus_server_id }}
#     --port={{ agent_secrets.nessus_port_id }}"
#   become: yes
#   args:
#   when: nessus_link is failed
#   ignore_errors: yes

# - name: verify nessus started
#   service:
#     name: nessusagent
#     enabled: yes
#     state: started
