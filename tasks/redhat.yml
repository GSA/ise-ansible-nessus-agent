---
- name: checking for existing installed nessus agent
  stat:
    path: '{{ redhat_nessuscli_bin_path }}'
  register: agent

- debug:
    msg: "nessus agent not found (start installing)"
  when: not agent.stat.exists

- debug:
    msg: "nessus agent found (skip installing)"
  when: agent.stat.exists

#--- Install nessus agent
- name: download nessus agent
  aws_s3:
    bucket: "{{ redhat_nessus_agent_artifacts_s3_bucket }}"
    object: "{{ redhat_nessus_agent_artifacts_s3_key }}"
    dest: /tmp/nessus-agent.rpm
    mode: get
  when: not agent.stat.exists

- name: install nessus agent (redhat)
  yum:
    name: /tmp/nessus-agent.rpm 
    state: present
  register: install_nessus_agent
  when: not agent.stat.exists


#--- Run nessus agent as service
- name: ensure required services are started
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - nessusagent

#--- Link nessus agent to nessus server

- name: check nessus agent link status at begin
  command: '{{ redhat_nessuscli_bin_path }} agent status'
  become: yes
  ignore_errors: yes # adding ignore_errors since this will fail until you have an environment with connectivity to a nessus master host
  register: nessus_agent_link_before

- debug:
    msg: "At begin, nessus agent NOT linked"
  when: '"Link status: Not linked to a manager" in nessus_agent_link_before.stdout'

- debug:
    msg: "At begin, nessus agent STILL linked"
  when: '"Link status: Not linked to a manager" not in nessus_agent_link_before.stdout'

- name: link nessus agent
  shell: "{{ redhat_nessuscli_bin_path }} agent link --key={{ nessus_agent_key }} --host={{ nessus_server_url }} --port={{ nessus_server_port }}"
  when: '"Link status: Not linked to a manager" in nessus_agent_link_before.stdout'

- name: check nessus agent link status at end
  command: '{{ redhat_nessuscli_bin_path }} agent status'
  become: yes
  ignore_errors: yes # adding ignore_errors since this will fail until you have an environment with connectivity to a nessus master host
  register: nessus_agent_link_after

- debug:
    msg: "At the end, nessus agent NOT linked"
  when: '"Link status: Not linked to a manager" in nessus_agent_link_after.stdout'

- debug:
    msg: "At the end, nessus agent STILL linked"
  when: '"Link status: Not linked to a manager" not in nessus_agent_link_after.stdout'
