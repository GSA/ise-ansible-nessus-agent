---
- name: checking for existing installed nessus agent
  stat:
    path: '{{ redhat_nessuscli_bin_path }}'
  register: agent

- debug:
    msg: "nessus agent not found (start installing)"
  when: not agent.stat.exists

- debug:
    msg: "nessus agent found (skip installing)"
  when: agent.stat.exists

#--- Install nessus agent
- name: download nessus agent
  amazon.aws.aws_s3:
    bucket: sectools-artifacts
    object: /nessus-agent/NessusAgent-8.0.0-amzn.x86_64.rpm
    dest: /tmp/NessusAgent-8.0.0-amzn.x86_64.rpm
    mode: get
  when: not agent.stat.exists

- name: install nessus agent (redhat)
  yum:
    name: "/tmp/NessusAgent-8.0.0-amzn.x86_64.rpm"
    state: present
  register: install_nessus_agent

- debug:
    msg: "{{ install_nessus_agent.stdout }}"
  when: not agent.stat.exists

#--- Run nessus agent as service
- name: ensure required services are started
  service:
    name: "{{ item }}"
    enabled: yes
    state: started
  with_items:
    - nessusagent

#--- Link nessus agent to nessus server
- name: check nessus agent link status
  command: '{{ redhat_nessuscli_bin_path }} agent status'
  become: yes
  ignore_errors: yes # adding ignore_errors since this will fail until you have an environment with connectivity to a nessus master host
  changed_when: '"[info] [agent] Linked to" not in nessus_agent_link.stdout'
  register: nessus_agent_link

- debug:
    msg: "nessus agent still linked"
  when: '"[info] [agent] Linked to" in nessus_agent_link.stdout'

- debug:
    msg: "nessus agent NOT linked"
  when: '"[info] [agent] Linked to" not in nessus_agent_link.stdout'

- name: link nessus agent
  shell: "{{ redhat_nessuscli_bin_path }} agent link --key={{ nessus_agent_key }} --host={{ nessus_server_url }} --port={{ nessus_server_port }}"
  when: nessus_agent_link is failed

- debug:
    msg: "{{ nessus_agent_link.stdout }}"
  when: nessus_agent_link is failed
